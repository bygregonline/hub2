{"version":3,"sources":["components/response/response.js","components/divrow/userRow.js","components/divrow/divrow.js","components/datacontainer/datacontainer.js","components/upperdiv/upperdiv.js","App.js","reportWebVitals.js","index.js"],"names":["Response","status","time","size","snapshot","csvData","className","data","filename","target","Userrow","c","background__user_color","order_count","useState","userColor","setUserColor","Fragment","style","background","onMouseOver","e","onMouseOut","name","Divrow","company","total","contacts","reduce","prev","cur","total_sales","orders_sum","background_color","color","setColor","id","type","map","Datacontainer","Upperdiv","props","callBackState","i","rt","enqueueSnackbar","toFixed","variant","autoHideDuration","fetch_data","console","log","axios","get","then","response","setState","elapsed_time","title","catch","onChange","value","state","this","Helmet","backgroundColor","JSON","stringify","length","Component","withSnackbar","App","maxSnack","preventDuplicate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","disableReactDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf8de095.chunk.js","sourcesContent":["import { CSVLink, CSVDownload } from \"react-csv\";\n\nconst Response = ({ status, time, size, snapshot, csvData }) => {\n  return (\n    <div className=\"mt-1 \">\n      <div>\n        <h5 className=\"text-primary d-inline\">\n          <u>Response</u>\n        </h5>{\" \"}\n        <span className=\"ml-5\">\n\n        </span>\n      </div>\n      <div className=\"d-flex mt-3 text-dark fw-bold\">\n        <div className=\"me-3\">\n          Status: <span className=\"fw-normal\">{status}</span>\n        </div>\n        <div className=\"me-3 \">\n          Time: <span className=\"fw-normal\">{time} s</span>\n        </div>\n        <div className=\"me-3\">\n          Size: <span className=\"fw-normal\">{size}</span>\n        </div>\n      </div>\n      <div className=\"d-flex  text-dark fw-bold\">\n        <div className=\"\">\n          Snapshot at: <span className=\"fw-normal\">{snapshot}</span>\n        </div>\n      </div>\n      <div className=\"d-flex mt-3\">\n      <CSVLink\n            data={csvData}\n            filename={\"my-file.csv\"}\n            className=\"btn btn-outline-info btn-sm\"\n            target=\"_blank\"\n          >\n            Download data\n          </CSVLink>\n        </div>\n\n    </div>\n  );\n};\n\nexport default Response;\n","import React, { useState } from \"react\";\n\nconst Userrow = ({ c }) => {\n  const background__user_color = c.order_count > 3 ? \"#fafc77\" : \"\";\n  const [userColor, setUserColor] = useState(\"\");\n\n  return (\n    <React.Fragment>\n      <tr\n\n        style={{ background: userColor }}\n        onMouseOver={(e) => setUserColor(background__user_color)}\n        onMouseOut={(e) => setUserColor(\"\")}\n      >\n        <td></td>\n        <td></td>\n        <td>{c.name}</td>\n        <td>Order count {c.order_count}</td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n};\n\nexport default Userrow;\n","import React, { useState } from \"react\";\nimport Userrow from \"./userRow\";\n\nconst Divrow = ({ company }) => {\n  const total = company.contacts.reduce(function (prev, cur) {\n    return prev + cur.order_count;\n  }, 0);\n  const total_sales = company.contacts.reduce(function (prev, cur) {\n    return prev + cur.orders_sum;\n  }, 0);\n\n  const background_color= total_sales>50000?  \"#63f7685A\":  \"#ffd3875A\";\n\n\n  const [color, setColor] = useState(\"\");\n\n\n\n  return (\n    <React.Fragment>\n      <tr className=\" text-dark fw-bold\" style={{ background: color }} onMouseOver={(e)=>setColor(background_color)} onMouseOut={(e)=>setColor('') }>\n        <td>{company.id}</td>\n        <td>{company.name}</td>\n        <td>{total}</td>\n        <td>{total_sales}</td>\n\n        <td>\n          <div className=\"form-check form-switch\">\n            <input className=\"form-check-input\" type=\"checkbox\" />\n            <label className=\"form-check-label\">select</label>\n          </div>\n        </td>\n      </tr>\n\n      {company.contacts.map((c) => (\n        <Userrow       key={c.id}  c={c} total = {total} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default Divrow;\n","\nimport Divrow from \"../divrow\";\n\n\n\nconst Datacontainer = ({ data }) => {\n  return (\n    <div className=\"shadow p-3 mt-5 bg-white rounded\">\n      <table className=\"table \">\n        <thead>\n          <tr className=\"text-justify small text-secondary\">\n            <th className=\"col-1\">id</th>\n            <th className=\"col-2\">Name</th>\n            <th className=\"col-2\">Order Count</th>\n            <th className=\"col-2\">Order Sum </th>\n            <th className=\"col-1\">Select </th>\n          </tr>\n        </thead>\n        <tbody className=\"text-justify small text-secondary\">\n          {data.map((company) => (\n            <Divrow key={company.id} company={company}></Divrow>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Datacontainer;\n","import React, { Component } from \"react\";\nimport Response from \"../response/response\";\nimport Datacontainer from \"../datacontainer/datacontainer\";\n\nimport { withSnackbar } from \"notistack\";\nimport axios from \"axios\";\nimport { Helmet } from \"react-helmet\";\n\nclass Upperdiv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elapsed_time: 0.0,\n      data: [],\n      status: 200,\n      time: 0.0,\n      title:\"Loading page 0\"\n    };\n  }\n\n  callBackState = (i,rt) => {\n   this.props.enqueueSnackbar(\"Page \"+i+\" successfully loaded \"+rt.toFixed(3)+ \" s\", {\n      variant: \"success\",\n      autoHideDuration: 2700,\n    });\n  };\n\n  fetch_data = (i) => {\n    console.log(\"https://bygreg.pythonanywhere.com/shuup/ws?page=\"+i)\n    axios\n      .get(\"https://bygreg.pythonanywhere.com/shuup/ws?page=\"+i, {})\n      .then((response) => {\n\n        console.log(response)\n\n        if (response.status === 200) {\n          this.setState(\n            {\n              elapsed_time: response.data.elapsed_time,\n              data: response.data.data,\n              status: response.status,\n              time: response.data.time,\n              title:\"Loading.. page \"+i\n            },\n            this.callBackState(i,response.data.elapsed_time)\n          );\n        } else {\n        }\n      })\n      .catch((e) => {\n        console.log(e)\n        this.props.enqueueSnackbar(\"SOMETHING GOES REALLY WRONG\", {\n          variant: \"error\",\n          autoHideDuration: 4700,\n        });\n\n      });\n  };\n\n  onChange = (e) => {\n    this.fetch_data(e.target.value);\n  };\n\n  componentDidMount() {\n    this.fetch_data(1);\n\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>{this.state.title}</title>\n        </Helmet>\n        <form data-form>\n          <div className=\"input-group mb-4\">\n            <select\n              className=\"form-select flex-grow-0 w-auto\"\n              style={{ backgroundColor: \"#d6ecff\" }}\n              onChange={this.onChange}\n            >\n              <option value=\"1\">PAGE 1</option>\n              <option value=\"2\">PAGE 2</option>\n              <option value=\"3\">PAGE 3</option>\n              <option value=\"4\">PAGE 4</option>\n              <option value=\"5\">PAGE 5</option>\n            </select>\n          </div>\n        </form>\n\n        <hr />\n\n        <Response\n          size={JSON.stringify(this.state.data).length}\n          time={this.state.elapsed_time.toFixed(5)}\n          status={this.state.status}\n          snapshot={this.state.time}\n          csvData={this.state.data}\n        />\n\n        <Datacontainer data={this.state.data} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(Upperdiv);\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport Upperdiv from \"./components/upperdiv/upperdiv\";\nimport { SnackbarProvider } from \"notistack\";\n\nfunction App() {\n  return (\n    <div className=\"p-4\">\n      <SnackbarProvider maxSnack={1} preventDuplicate>\n        <Upperdiv />\n      </SnackbarProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { disableReactDevTools } from \"@fvilers/disable-react-devtools\";\n\nif (process.env.NODE_ENV === \"production\") {\n  disableReactDevTools();\n}\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}